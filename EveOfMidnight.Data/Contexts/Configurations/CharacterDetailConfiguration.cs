// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using EveOfMidnight.Data.Contexts;
using EveOfMidnight.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace EveOfMidnight.Data.Contexts.Configurations
{
    public partial class CharacterDetailConfiguration : IEntityTypeConfiguration<CharacterDetail>
    {
        public void Configure(EntityTypeBuilder<CharacterDetail> entity)
        {
            entity.ToTable(tb => tb.IsTemporal(ttb =>
    {
        ttb.UseHistoryTable("CharacterDetails_HISTORY", "dbo");
        ttb
            .HasPeriodStart("SysStart")
            .HasColumnName("SysStart");
        ttb
            .HasPeriodEnd("SysEnd")
            .HasColumnName("SysEnd");
    }
));

            entity.HasIndex(e => e.BoundId, "IX_CharacterDetails_BoundId");

            entity.HasIndex(e => e.FateId, "IX_CharacterDetails_FateId");

            entity.HasIndex(e => e.FocusId, "IX_CharacterDetails_FocusId");

            entity.HasIndex(e => e.PlayerCharacterId, "IX_CharacterDetails_PlayerCharacterId");

            entity.HasIndex(e => e.RaceId, "IX_CharacterDetails_RaceId");

            entity.Property(e => e.Id).HasDefaultValueSql("(newsequentialid())");

            entity.Property(e => e.Ambition).HasDefaultValueSql("((5))");

            entity.Property(e => e.Health).HasDefaultValueSql("((16))");

            entity.Property(e => e.Morality).HasDefaultValueSql("((7))");

            entity.Property(e => e.WeightLimit).HasDefaultValueSql("((135))");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CharacterDetail> entity);
    }
}
